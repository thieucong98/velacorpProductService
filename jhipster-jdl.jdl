



enum CheckoutState {
    COMPLETED, PENDING,  LOCK
}

enum DeliveryMethod {
    VIETTEL_POST, GRAB_EXPRESS, SHOPEE_EXPRESS, YAS_EXPRESS
}

enum DeliveryStatus {
    PREPARING,
    DELIVERING,
    DELIVERED,
    CANCELLED
}

enum OrderStatus {
    PENDING,
    ACCEPTED,
    PENDING_PAYMENT,
    PAID,
    SHIPPING,
    COMPLETED,
    REFUND,
    CANCELLED,

    REJECT
}

enum PaymentMethod {
    COD, BANKING
}

enum PaymentStatus {
    PENDING,
    COMPLETED,
    CANCELLED
}


entity Product {
    id Long,
    name String required,
    quantity Long min(0),
    price Double min(0),
    active Boolean,
    imageUrl String
}
entity Order{
    id Long,
    email String required
    shippingAddressId String ,
    billingAddressId String ,
    note String ,
    tax Float ,
    discount Float ,
    numberItem Integer ,
    couponCode String ,
    totalPrice BigDecimal ,
    deliveryFee BigDecimal ,
    orderStatus OrderStatus ,
    deliveryMethod DeliveryMethod ,
    deliveryStatus DeliveryStatus ,
    paymentStatus PaymentStatus ,
    paymentId Long ,
    checkoutId String ,
    rejectReason String ,
}

entity OrderItem{
    productId Long,
    productName String,
    quantity Integer,
    productPrice BigDecimal,
    note String,
    discountAmount BigDecimal,
    taxAmount BigDecimal,
    taxPercent BigDecimal,
}


relationship OneToMany {
   Order{orderItem} to OrderItem{order(email) required}
}




dto * with mapstruct
service * with serviceImpl
paginate * with pagination


